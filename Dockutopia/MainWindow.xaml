<Window x:Class="Dockutopia.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dockutopia"
        xmlns:viewModel="clr-namespace:Dockutopia.ViewModel"
        xmlns:converter="clr-namespace:Dockutopia.Converter"
        mc:Ignorable="d"
        Title="Dockutopia" Height="600" Width="800" Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip">
    <Window.DataContext>
        <viewModel:MainNotifyPropertyChanged />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshUiCommand}" />
    </Window.InputBindings>
    <Window.Resources>
        <converter:StartCommandParamConverter x:Key="startCommandParamConverter" />
        <converter:StopCommandParamConverter x:Key="stopCommandParamConverter" />
        <converter:IpCommandParamConverter x:Key="ipCommandParamConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="137*"/>
            <ColumnDefinition Width="22*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- top grid -->
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="452*"/>
                <ColumnDefinition Width="343*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ListView Grid.Row="0" x:Name="listBoxImages" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding DockerImagesListHandler.DockerImages}" Grid.ColumnSpan="2" Margin="0,0,0,0.5">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Repository" DisplayMemberBinding="{Binding Repository}" />
                        <GridViewColumn Header="Tag" DisplayMemberBinding="{Binding Tag}" />
                        <GridViewColumn Header="Image ID" DisplayMemberBinding="{Binding ImageId}" />
                        <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Size}" />
                        <GridViewColumn Header="Created" DisplayMemberBinding="{Binding Created}" />
                    </GridView>
                </ListView.View>
            </ListView>


            <ListView x:Name="listBoxContainers" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding DockerContainerListHandler.DockerContainers, Mode=TwoWay}" SelectedItem="{Binding DockerContainerListHandler.SelectedDockerContainer}" Grid.ColumnSpan="2" Margin="0,140,0,0" Grid.RowSpan="2">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="ContainerId" DisplayMemberBinding="{Binding ContainerId}" />
                        <GridViewColumn Header="Image" DisplayMemberBinding="{Binding Image}" />
                        <GridViewColumn Header="Command" DisplayMemberBinding="{Binding Command}" />
                        <GridViewColumn Header="Running for" DisplayMemberBinding="{Binding RunningFor}" />
                        <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}" />
                        <GridViewColumn Header="Ports" DisplayMemberBinding="{Binding Ports}" />
                        <GridViewColumn Header="Names" DisplayMemberBinding="{Binding Names}" />
                    </GridView>
                </ListView.View>
                <ListView.ContextMenu >
                    <ContextMenu Background="DimGray" MinWidth="150">
                        <MenuItem Header="   Start" Command="{Binding RunDockerCommandWithRefreshCommand}" CommandParameter="{Binding DockerContainerListHandler.SelectedDockerContainer.Names, Converter={StaticResource startCommandParamConverter}}"/>
                        <MenuItem Header="   Stop" Command="{Binding RunDockerCommandWithRefreshCommand}" CommandParameter="{Binding DockerContainerListHandler.SelectedDockerContainer.Names, Converter={StaticResource stopCommandParamConverter}}"/>
                        <MenuItem Header="   View IP" Command="{Binding RunDockerCommandWithRefreshCommand}" CommandParameter="{Binding DockerContainerListHandler.SelectedDockerContainer.ContainerId, Converter={StaticResource ipCommandParamConverter}}"/>


                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

        </Grid>


        <!-- grid splitter -->
        <GridSplitter Grid.Row="1" Height="10" HorizontalAlignment="Stretch" Background="DimGray" Grid.ColumnSpan="2"/>

        <!-- bottom grid -->
        <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,0,0.5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <RichTextBox Grid.Row="0" x:Name="textBoxOutput" IsReadOnly="True"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  AcceptsReturn="True" MinHeight="200" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Visible" TextChanged="textBoxOutput_TextChanged">
                <FlowDocument>
                    <Paragraph>
                        <Run Text="Dockutopia [Version 0.0.1]" Foreground="CadetBlue"/>
                        <LineBreak />
                        <Run Text="no (c) Free as in both 'free speech' and 'free beer'." Foreground="CadetBlue"/>
                        <LineBreak />

                        <Run Text="{Binding Path=DockerHandler.OutputText}" />
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
            <TextBox Grid.Row="1" x:Name="textBoxCommand" HorizontalAlignment="Stretch" Height="23" TextWrapping="Wrap" Text="{Binding PreviousCommandHandler.CommandText}" VerticalAlignment="Top" KeyUp="textBoxCommand_KeyUp">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding OnEnterPressCommand}" CommandParameter="{Binding Text, ElementName=textBoxCommand}"/>
                    <KeyBinding Key="Up" Command="{Binding PreviousCommandHandler.GetPreviousInputCommand}" />
                    <KeyBinding Key="Down" Command="{Binding PreviousCommandHandler.GetNextInputCommand}" />
                </TextBox.InputBindings>
            </TextBox>

        </Grid>


    </Grid>
</Window>
